{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../LayerCake.svelte",
    "../../Html.svelte",
    "../../Svg.svelte",
    "../../App.svelte",
    "../../Chapter.svelte",
    "../../Chart.svelte",
    "../../Panel.svelte",
    "../../Subpanel.svelte",
    "../../Subsection.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 350;\n\texport let containerHeight = height || 250;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst originalSettings = {};\n\t$: if (x) originalSettings.x = x;\n\t$: if (y) originalSettings.y = y;\n\t$: if (z) originalSettings.z = z;\n\t$: if (r) originalSettings.r = r;\n\t$: if (xDomain) originalSettings.xDomain = xDomain;\n\t$: if (yDomain) originalSettings.yDomain = yDomain;\n\t$: if (zDomain) originalSettings.zDomain = zDomain;\n\t$: if (rDomain) originalSettings.rDomain = rDomain;\n\t$: if (xRange) originalSettings.xRange = xRange;\n\t$: if (yRange) originalSettings.yRange = yRange;\n\t$: if (zRange) originalSettings.zRange = zRange;\n\t$: if (rRange) originalSettings.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d], ([$flatData, $activeGetters]) => {\n\t\treturn calcExtents($flatData, $activeGetters);\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\toriginalSettings: writable(originalSettings),\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n<div\n\tclass=\"layercake-container\"\n\tbind:clientWidth={containerWidth}\n\tbind:clientHeight={containerHeight}\n>\n\t<slot></slot>\n</div>\n\n<style>\n:global(.layercake-container),\n:global(.layercake-container *) {\n\t-webkit-box-sizing: border-box;\n\t        box-sizing: border-box;\n}\n.layercake-container {\n\twidth: 100%;\n\theight: 100%;\n}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\tlet zIndexStyle = '';\n\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tconst { padding } = getContext('LayerCake');\n\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\ndiv,\nslot {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\tlet zIndexStyle = '';\n\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}\"\n>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\nsvg {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}</style>\n",
    "<script>\n  import Chapter from \"./Chapter.svelte\";\n</script>\n\n<div class=\"c\">\n  <Chapter />\n</div>\n\n<style>\n.c {\n  font-family: Georgia, serif;\n}</style>\n",
    "<script>\n  import Panel from \"./Panel.svelte\";\n\n  import { sections } from \"./../copy\";\n\n  let openSection = null;\n  let isSubsectionOpen = false;\n</script>\n\n<svelte:head>\n  {#if openSection}\n    <style>\nbody {\n  overflow: hidden;\n}</style>\n  {/if}\n</svelte:head>\n\n<div class=\"c\">\n  {#each sections as section, i}\n    <section>\n      <h2>{section.name}</h2>\n      <div class=\"description\">\n        {@html section.description}\n      </div>\n      <div class=\"subsections\">\n        {#each section.subsections || [] as subsection, j}\n          <div\n            class=\"subsection\"\n            class:active=\"{openSection && openSection[0] == i && openSection[1] == j}\"\n            on:mouseenter=\"{() => {\n              if (!openSection) return;\n              openSection = [i, j];\n            }}\"\n            on:click=\"{() => (openSection = [i, j])}\">\n            <div class=\"subsection-type\">{subsection.type}</div>\n            <div class=\"subsection-name\">{subsection.name}</div>\n          </div>\n        {/each}\n      </div>\n    </section>\n  {/each}\n  <div\n    class=\"panel\"\n    class:hidden=\"{!openSection}\"\n    class:expanded=\"{isSubsectionOpen}\"\n    id=\"panel-2\">\n    {#if openSection}\n      <Panel\n        section=\"{openSection && sections[openSection[0]]}\"\n        subsectionIndex=\"{openSection && openSection[1]}\"\n        bind:isSubsectionOpen />\n    {/if}\n  </div>\n  {#if openSection}\n    <div class=\"background\" on:click=\"{() => (openSection = null)}\"></div>\n  {/if}\n</div>\n\n<style>\n.c {\n  padding: 3em;\n}\nsection {\n  margin: 6em 0;\n  max-width: 40em;\n}\n.description {\n  margin: 1em 0;\n  line-height: 1.6em;\n}\n.subsections {\n  position: relative;\n  z-index: 60;\n}\n.subsection {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 0.6em 0;\n}\n.subsection:hover {\n  background: #f4f4f4;\n  cursor: pointer;\n}\n.subsection.active {\n  background: #f4f4f4;\n}\n.subsection-type {\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 6em;\n          flex: 0 0 6em;\n  text-align: right;\n  padding-right: 1em;\n}\n.subsection-name {\n}\n.panel {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 40em;\n  z-index: 100;\n  background: #fff;\n\n  -webkit-box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\n    0 18px 36px -18px rgba(0, 0, 0, 0.3);\n\n          box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\n    0 18px 36px -18px rgba(0, 0, 0, 0.3);\n  -webkit-transition: all 0.6s ease-out;\n  -o-transition: all 0.6s ease-out;\n  transition: all 0.6s ease-out;\n  max-height: 100vh;\n  overflow: auto;\n}\n.panel.expanded {\n  width: 50em;\n  padding-right: 10em;\n}\n.panel.hidden {\n  -webkit-transform: translate(110%, 0);\n      -ms-transform: translate(110%, 0);\n          transform: translate(110%, 0);\n}\n.static {\n  overflow: hidden;\n}\n.background {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(255, 255, 255, 0.7);\n  cursor: pointer;\n  z-index: 50;\n}</style>\n",
    "<script>\n  import { LayerCake, Svg } from \"layercake\";\n  import Scatter from \"./Scatter.svelte\";\n\n  export let numPoints = 100;\n\n  $: points = new Array(numPoints).fill(0).map(_ => ({\n    x: Math.random() * 100,\n    y: Math.random() * 100\n  }));\n  const r = 6;\n  const padding = { top: r * 2, right: r * 2, bottom: r * 2, left: r * 2 };\n</script>\n\n<div class=\"c\">\n  <LayerCake data=\"{points}\" x=\"x\" y=\"y\" {padding}>\n    <Svg>\n      <Scatter {r} />\n    </Svg>\n  </LayerCake>\n</div>\n\n<style>\n.c {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  /* background: pink; */\n  margin: 2em 0;\n}</style>\n",
    "<script>\n  import Chart from \"./Chart.svelte\";\n  import Subpanel from \"./Subpanel.svelte\";\n  import Subsection from \"./Subsection.svelte\";\n\n  export let section;\n  export let subsectionIndex;\n  export let isSubsectionOpen;\n\n  let openSubsectionIndex = null;\n\n  $: subsections = section.subsections || [];\n  $: subsection = subsections[subsectionIndex] || {};\n\n  let didMount = false;\n\n  const scrollToSubsection = () => {\n    setTimeout(() => {\n      const elem = document.getElementById(`section-${subsectionIndex}`);\n      if (!elem) return;\n      elem.scrollIntoView({\n        behavior: didMount ? \"smooth\" : \"auto\"\n      });\n      didMount = true;\n    }, 100);\n  };\n  $: subsectionIndex, scrollToSubsection();\n\n  const updateIsSubsectionOpen = () => {\n    isSubsectionOpen = Number.isFinite(openSubsectionIndex);\n  };\n  $: openSubsectionIndex, updateIsSubsectionOpen();\n</script>\n\n<div class=\"c\">\n  <div class=\"subsections\">\n    {#each subsections as subsection, j}\n      <Subsection index=\"{j}\" {subsection} bind:openSubsectionIndex />\n    {/each}\n  </div>\n  <div class=\"panel\" class:hidden=\"{!Number.isFinite(openSubsectionIndex)}\">\n    {#if Number.isFinite(openSubsectionIndex)}\n      <Subpanel type=\"{subsections[openSubsectionIndex].type}\" />\n    {/if}\n  </div>\n  {#if Number.isFinite(openSubsectionIndex)}\n    <div\n      class=\"background\"\n      on:click=\"{() => (openSubsectionIndex = null)}\"></div>\n  {/if}\n</div>\n\n<style>\n.c {\n  padding: 0 3em;\n}\n.panel {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  max-width: 40em;\n  width: 40em;\n  z-index: 200;\n  background: #fff;\n\n  -webkit-box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\n    0 18px 36px -18px rgba(0, 0, 0, 0.3);\n\n          box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),\n    0 18px 36px -18px rgba(0, 0, 0, 0.3);\n  -webkit-transition: all 0.6s ease-out;\n  -o-transition: all 0.6s ease-out;\n  transition: all 0.6s ease-out;\n  max-height: 100vh;\n  overflow: auto;\n}\n.panel.hidden {\n  -webkit-transform: translate(110%, 0);\n      -ms-transform: translate(110%, 0);\n          transform: translate(110%, 0);\n}\n\n.background {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(255, 255, 255, 0.7);\n  cursor: pointer;\n  z-index: 150;\n}</style>\n",
    "<script>\n  import Chart from \"./Chart.svelte\";\n\n  export let type;\n</script>\n\n<div class=\"c\">\n  {#if type == 'data'}\n    <Chart />\n  {:else}\n    <div class=\"copy\">\n      <h2>The employment-to-population ratio</h2>\n      <br />\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat.\n      </p>\n      <svg\n        style=\"margin: 0 -3em 1em; width: calc(100% + 6em);\"\n        width=\"100%\"\n        height=\"10em\"\n        viewBox=\"0 0 1011 185\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M2 149.276C5 146.715 8 144.26 15.2662 144.26C25 144.26 19.8002\n          178.237 32.647 178.554C45.4937 178.872 53.8063 130.605 73.4543\n          130.605C93.1023 130.605 79.4998 183 98.3921 183C117.284 183 110.483\n          130.605 130.887 130.605C151.291 130.605 132.398 178.554 152.802\n          178.554C173.206 178.554 190.586 170.933 212.501 170.933C234.417\n          170.933 263.133 125.207 306.207 125.207C349.282 125.207 356.083\n          156.009 377.998 156.009C399.913 156.009 417.294 89.3246 446.01\n          89.3246C474.726 89.3246 467.169 136.321 483.039 136.321C498.908\n          136.321 550.295 29.3088 578.256 29.3088C606.217 29.3088 595.637\n          58.5228 629.643 58.5228C663.649 58.5228 683.297 2 733.173 2C783.048 2\n          760.378 45.8211 786.827 45.8211C813.276 45.8211 810.253 32.1667\n          830.657 32.1667C851.061 32.1667 857.106 120.126 902.448\n          120.126C947.789 120.126 976.505 69.3193 1009 69.3193\"\n          stroke=\"#B50027\"\n          stroke-width=\"4\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"></path>\n      </svg>\n\n      <p>\n        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum\n        dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupa the\n        employment-to-population ratio non proident, sunt in culpa qui officia\n        deserunt mollit anim id est laborum.\n      </p>\n      <p>\n        Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt\n        explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n        voluptatem sequi nesciunt.\n      </p>\n    </div>\n  {/if}\n</div>\n\n<style>\n.c {\n  padding: 8.8em 3em;\n}\n\n.copy {\n  padding: 0 0;\n}\n.copy :global(p) {\n  padding: 1em 0;\n  line-height: 1.6em;\n}\n.copy :global(b) {\n  font-weight: 800;\n  cursor: pointer;\n}</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Chart from \"./Chart.svelte\";\n\n  export let index = 0;\n  export let subsection = {};\n  export let openSubsectionIndex;\n\n  let elem;\n\n  onMount(() => {\n    let options = {\n      root: elem,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    console.log(elem);\n\n    let observer = new IntersectionObserver(() => {\n      console.log(index);\n    }, options);\n  });\n</script>\n\n<section class=\"subsection\" id=\"{`section-${index}`}\" bind:this=\"{elem}\">\n  <h6 class=\"type\">{subsection.type}</h6>\n  <h2 class=\"name\">{subsection.name}</h2>\n  {#if subsection.type == 'context'}\n    <div class=\"copy\">\n      <!-- {@html subsection.copy} -->\n\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat.\n      </p>\n      <p>\n        Duis aute irure dolor\n        <b\n          on:click=\"{() => {\n            openSubsectionIndex = 0;\n          }}\">\n          employment-to-population ratio\n        </b>\n        in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n        pariatur. Excepteur sint occaecat cupa the employment-to-population\n        ratio non proident, sunt in culpa qui officia deserunt mollit anim id\n        est laborum.\n      </p>\n      <p>\n        Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt\n        explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n        voluptatem sequi nesciunt.\n      </p>\n    </div>\n  {:else if subsection.type == 'data'}\n    <div\n      class=\"chart\"\n      on:click=\"{() => {\n        openSubsectionIndex = index;\n      }}\">\n      <Chart numPoints=\"{30}\" />\n    </div>\n  {/if}\n</section>\n\n<style>\nsection {\n  min-height: 70vh;\n  padding: 7em 0;\n}\n.copy {\n  padding: 1em 0;\n}\n.copy :global(p) {\n  padding: 1em 0;\n  line-height: 1.6em;\n}\n.copy :global(b) {\n  font-weight: 800;\n  cursor: pointer;\n}\n.chart {\n  cursor: pointer;\n}</style>\n"
  ],
  "names": [],
  "mappings": "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"
}